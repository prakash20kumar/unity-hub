name: Deploy MERN Stack

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend Docker image
        run: |
          docker build \
            --build-arg MONGO_URL="${{ secrets.MONGO_URL }}" \
            --build-arg PORT="${{ secrets.PORT }}" \
            --build-arg JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg BUCKET_NAME="${{ secrets.BUCKET_NAME }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Build and push backend Docker image
        run: |
          docker build \
            --build-arg MONGO_URL="${{ secrets.MONGO_URL }}" \
            --build-arg PORT="${{ secrets.PORT }}" \
            --build-arg JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg BUCKET_NAME="${{ secrets.BUCKET_NAME }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./server
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Install Docker on EC2 instances
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Deploy to AWS EC2
        run: |
          aws ssm send-command --document-name "AWS-RunShellScript" --targets "Key=tag:Name,Values=unity-hub-frontend" --parameters "commands=docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest && docker run -d -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/frontend:latest"

          aws ssm send-command --document-name "AWS-RunShellScript" --targets "Key=tag:Name,Values=unity-hub-backend" --parameters "commands=docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest && docker run -d -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/backend:latest"
