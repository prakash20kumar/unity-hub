name: Deploy MERN Stack

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend Docker image
        run: |
          docker build \
            --build-arg MONGO_URL="${{ secrets.MONGO_URL }}" \
            --build-arg PORT="${{ secrets.BACKEND_PORT }}" \
            --build-arg JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg BUCKET_NAME="${{ secrets.BUCKET_NAME }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./server
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest    
          

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Fetch EC2 Instance IP
        id: fetch_ip
        run: |
          BACKEND_INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=unity-hub-backend" \
            --query "Reservations[*].Instances[*].InstanceId" \
            --output text)
          FRONTEND_INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=unity-hub-frontend" \
            --query "Reservations[*].Instances[*].InstanceId" \
            --output text)
          BACKEND_PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $BACKEND_INSTANCE_ID \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text)
          FRONTEND_PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $FRONTEND_INSTANCE_ID \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text)
          echo "BACKEND_PUBLIC_IP=$BACKEND_PUBLIC_IP" >> $GITHUB_ENV
          echo "FRONTEND_PUBLIC_IP=$FRONTEND_PUBLIC_IP" >> $GITHUB_ENV

      - name: Build frontend Docker image
        run: |
          docker build \
            --build-arg REACT_APP_BASE_URL="${{ secrets.REACT_APP_BASE_URL }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest \
            --no-cache \
            ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Accept host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ env.BACKEND_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Deploy backend to AWS EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.BACKEND_PUBLIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
            sudo docker stop backend || true
            sudo docker rm backend || true
            sudo docker run -d --name backend -p 5000:5000 \
              -e MONGO_URL="${{ secrets.MONGO_URL }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              -e BUCKET_NAME="${{ secrets.BUCKET_NAME }}" \
              ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Deploy frontend to AWS EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.FRONTEND_PUBLIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            sudo docker stop frontend || true
            sudo docker rm frontend || true
            sudo docker run -d --name frontend -p 3000:3000 \
              -e REACT_APP_BASE_URL="https://${{ env.FRONTEND_PUBLIC_IP }}" \
              ${{ secrets.DOCKER_USERNAME }}/frontend:latest
